/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg201340385anslab5;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ty
 */
public class mainFrame extends javax.swing.JFrame {
    ArrayList<Sequence> sequences = new ArrayList();

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
        addKeyListenerToTextArea();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea1 = new javax.swing.JTextArea();
        resetButton = new javax.swing.JButton();
        upload1 = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        nucButton = new javax.swing.JRadioButton();
        protButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        matchField = new javax.swing.JTextField();
        mismatchField = new javax.swing.JTextField();
        gapField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        protCombo = new javax.swing.JComboBox<>();
        closeButton = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setText("PAIRWISE SEQUENCE ALIGNMENT");

        inputArea1.setColumns(20);
        inputArea1.setRows(5);
        jScrollPane1.setViewportView(inputArea1);

        resetButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        upload1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        upload1.setText("UPLOAD");
        upload1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upload1ActionPerformed(evt);
            }
        });

        submitButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        submitButton.setText("SUBMIT");
        submitButton.setEnabled(false);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(nucButton);
        nucButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        nucButton.setText("Nucleotide Sequence");
        nucButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nucButtonStateChanged(evt);
            }
        });

        buttonGroup1.add(protButton);
        protButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        protButton.setText("Protein Sequence");
        protButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                protButtonStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        jLabel1.setText("By Miriam Ty");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel2.setText("Options:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel3.setText("Scoring Scheme:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel4.setText("Match:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel5.setText("Mismatch:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel6.setText("Gap:");

        matchField.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        matchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        matchField.setText("1");
        matchField.setEnabled(false);

        mismatchField.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        mismatchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mismatchField.setText("0");
        mismatchField.setEnabled(false);

        gapField.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        gapField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gapField.setText("-1");
        gapField.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel7.setText("Scoring Matrix:");

        protCombo.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        protCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PAM120 (Global)", "BLOSUM62 (Local)"}));
        protCombo.setEnabled(false);
        protCombo.setSelectedIndex(0);

        closeButton.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        closeButton.setText("CLOSE");
        closeButton.setToolTipText("");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(title))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nucButton)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(matchField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gapField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mismatchField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(protButton)
                                .addGap(85, 85, 85))
                            .addComponent(jLabel7)
                            .addComponent(protCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(upload1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upload1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nucButton)
                    .addComponent(protButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(matchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(protCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mismatchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(gapField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitButton)
                    .addComponent(resetButton))
                .addGap(152, 152, 152))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void upload1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upload1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File file1 = fc.getSelectedFile();
            String input = "";
            try {
                Scanner in = new Scanner(file1);
                while(in.hasNextLine()){
                    input += in.nextLine() + "\n";
                }
                this.inputArea1.setText(input);
                checkInput();
            } catch (FileNotFoundException fne){}
        } else {
            System.out.println("Operation Cancelled");
        }
        
    }//GEN-LAST:event_upload1ActionPerformed

    private void addKeyListenerToTextArea(){
        inputArea1.addKeyListener(new java.awt.event.KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                checkInput();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                checkInput();
            }

            @Override
            public void keyReleased(KeyEvent e) {
                checkInput();
            }
        }); 
        
        
    }
    
    private boolean loadFastaInput () {
        String[] text = this.inputArea1.getText().split("\n");
        if (text.length <= 1 || !text[0].startsWith(">") || text[0].isEmpty())
            return false;
        
        sequences = new ArrayList<>();
        for (int i = 0; i < text.length;) {
            if (text[i].startsWith(">")) {
                String comment = text[i].substring(1);
                String sequence = "";
                for (int j = i + 1; j < text.length; j++, i = j) {
                    if (text[j].isEmpty() || text[j].startsWith(">")) break;
                    sequence += text[j];
                }
                sequences.add(new Sequence(comment, sequence));
                if (sequence.isEmpty()) i++;
            } else if (!text[i].isEmpty()) {
                String comment = null;
                String sequence = "";
                for (int j = i; j < text.length; j++, i = j) {
                    if (text[j].isEmpty() || text[j].startsWith(">")) break;
                    sequence += text[j];
                }
                sequences.add(new Sequence(comment, sequence));
                if (sequence.isEmpty()) i++;
            }
            else i++;
        }
        return true;
    }
    
    private void checkInput() {
        if (this.inputArea1.getText().isEmpty() && this.loadFastaInput()){
            this.submitButton.setEnabled(false);
        }
        else {
            this.submitButton.setEnabled(true);
        }
        
        if (buttonGroup1.getSelection() == null)
            this.submitButton.setEnabled(false);
    
    }
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        Aligner align = null;
        outputFrame out;
        loadFastaInput();
        if(sequences.size() > 2){
            JOptionPane.showMessageDialog(new JFrame(), "More than 2 sequences");
        } else if (Integer.valueOf(mismatchField.getText()) > Integer.valueOf(matchField.getText())){
            JOptionPane.showMessageDialog(new JFrame(), "Mismatch value should be < than match value");
        } else {
            if (nucButton.isSelected()) {
                int match = Integer.valueOf(matchField.getText());
                int mismatch = Integer.valueOf(mismatchField.getText());
                int gap = Integer.valueOf(gapField.getText());
                for (int i = 0; i < sequences.size(); i++) {
                    sequences.get(i).sequence = sequences.get(i).sequence.toLowerCase();
                }
                align = new Aligner(sequences, match, mismatch, gap);
                align.runNucleotide();
                out = new outputFrame(align.output);
                out.show();
            } else if (protCombo.getSelectedIndex() == 0) {
                try {
                    align = new Aligner(sequences);
                    align.runGlobalProtein();
                    out = new outputFrame(align.output);
                    out.show();
                } catch (IOException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    align = new Aligner(sequences);
                    align.runLocalProtein();
                    out = new outputFrame(align.output);
                    out.show();
                } catch (IOException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        inputArea1.setText("");
        buttonGroup1.clearSelection();
        matchField.setText("1");
        mismatchField.setText("0");
        gapField.setText("-1");
        protCombo.setSelectedIndex(0);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void nucButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nucButtonStateChanged
        // TODO add your handling code here:
        if(nucButton.isSelected()){
            checkInput();
            matchField.setEnabled(true);
            mismatchField.setEnabled(true);
            gapField.setEnabled(true);
        } else {
            checkInput();
            matchField.setEnabled(false);
            mismatchField.setEnabled(false);
            gapField.setEnabled(false);
        }
            
    }//GEN-LAST:event_nucButtonStateChanged

    private void protButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_protButtonStateChanged
        // TODO add your handling code here:
        checkInput();
        if(protButton.isSelected()){
            
            protCombo.setEnabled(true);
        } else {
            
            protCombo.setEnabled(false);
        }
    }//GEN-LAST:event_protButtonStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField gapField;
    private javax.swing.JTextArea inputArea1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField matchField;
    private javax.swing.JTextField mismatchField;
    private javax.swing.JRadioButton nucButton;
    private javax.swing.JRadioButton protButton;
    private javax.swing.JComboBox<String> protCombo;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel title;
    private javax.swing.JButton upload1;
    // End of variables declaration//GEN-END:variables

}
